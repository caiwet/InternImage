{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA A100-SXM4-80GB\nCUDA_HOME: /n/app/cuda/11.7-gcc-9.2.0\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (GCC) 9.2.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.5.1\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.28.1+d485e00", "config": "NUM_CLASSES = 3\nmodel = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='InternImage',\n        core_op='DCNv3',\n        channels=64,\n        depths=[4, 4, 18, 4],\n        groups=[4, 8, 16, 32],\n        mlp_ratio=4.0,\n        drop_path_rate=0.2,\n        norm_layer='LN',\n        layer_scale=1.0,\n        offset_scale=1.0,\n        post_norm=False,\n        with_cp=False,\n        out_indices=(0, 1, 2, 3),\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            '/home/cat302/ETT-Project/InternImage/detection/modified_pretrained.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[64, 128, 256, 512],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=3,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=3,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=3,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'ETTDataset'\nclasses = ('carina', 'tip', 'clavicles')\ndata_root = '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/'\nimg_norm_cfg = dict(\n    mean=[126.55846604, 126.55846604, 126.55846604],\n    std=[55.47551373, 55.47551373, 55.47551373],\n    to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n    dict(type='Resize', img_scale=(1280, 1280), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.2),\n    dict(\n        type='Normalize',\n        mean=[126.55846604, 126.55846604, 126.55846604],\n        std=[55.47551373, 55.47551373, 55.47551373],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1280, 1280),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[126.55846604, 126.55846604, 126.55846604],\n                std=[55.47551373, 55.47551373, 55.47551373],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='ETTDataset',\n        classes=('carina', 'tip', 'clavicles'),\n        ann_file=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/annotations/train_annotations_enl5.json',\n        img_prefix=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/images/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n            dict(type='Resize', img_scale=(1280, 1280), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.2),\n            dict(\n                type='Normalize',\n                mean=[126.55846604, 126.55846604, 126.55846604],\n                std=[55.47551373, 55.47551373, 55.47551373],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='ETTDataset',\n        classes=('carina', 'tip', 'clavicles'),\n        ann_file=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/annotations/val_annotations_enl5.json',\n        img_prefix=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/images/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1280, 1280),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[126.55846604, 126.55846604, 126.55846604],\n                        std=[55.47551373, 55.47551373, 55.47551373],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='ETTDataset',\n        classes=('carina', 'tip', 'clavicles'),\n        ann_file=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/../hospital_downsized/Newark_Beth_Israel_Medical_Center/annotations/annotations.json',\n        img_prefix=\n        '/n/data1/hms/dbmi/rajpurkar/lab/ett/all_data_split/../hospital_downsized/Newark_Beth_Israel_Medical_Center/images',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1280, 1280),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[126.55846604, 126.55846604, 126.55846604],\n                        std=[55.47551373, 55.47551373, 55.47551373],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(\n    metric=['bbox'],\n    iou_thrs=[0],\n    classwise=True,\n    save_best='auto',\n    interval=1,\n    dynamic_intervals=[(17, 1)])\noptimizer = dict(\n    type='AdamW',\n    weight_decay=0.02,\n    lr=0.0001,\n    constructor='CustomLayerDecayOptimizerConstructor',\n    paramwise_cfg=dict(\n        num_layers=30, layer_decay_rate=1.0, depths=[4, 4, 18, 4]))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[1, 3, 5, 8, 11, 13, 15, 17, 19],\n    gamma=0.1)\nrunner = dict(type='EpochBasedRunner', max_epochs=20)\ncheckpoint_config = dict(interval=1, max_keep_ckpts=1, save_last=True)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\npretrained = '/home/cat302/ETT-Project/InternImage/detection/modified_pretrained.pth'\nmax_epochs = 20\nnum_last_epochs = 3\nwork_dir = './temp'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1687321482, "exp_name": "cascade_rcnn_internimage_t_fpn_1x_ett.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 1e-05, "memory": 14901, "data_time": 0.09622, "loss_rpn_cls": 0.58867, "loss_rpn_bbox": 0.03325, "s0.loss_cls": 0.54014, "s0.acc": 87.19531, "s0.loss_bbox": 0.00633, "s1.loss_cls": 0.4098, "s1.acc": 65.08398, "s1.loss_bbox": 0.00183, "s2.loss_cls": 0.15136, "s2.acc": 81.29883, "s2.loss_bbox": 0.00026, "loss": 1.73164, "time": 0.55732}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 2e-05, "memory": 14901, "data_time": 0.02563, "loss_rpn_cls": 0.23095, "loss_rpn_bbox": 0.02739, "s0.loss_cls": 0.07517, "s0.acc": 98.98633, "s0.loss_bbox": 0.00905, "s1.loss_cls": 0.03141, "s1.acc": 99.23047, "s1.loss_bbox": 0.00293, "s2.loss_cls": 0.01526, "s2.acc": 99.32031, "s2.loss_bbox": 0.00066, "loss": 0.39281, "time": 0.47463}
